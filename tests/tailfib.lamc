let fib : int -> int =
  \ (n : int) ->
  letrec go : int -> (int * int) -> int =
    \ (i : int) -> \ (p : int * int) ->
      if i == 0 return int then
        fst p
      else
      go (i - 1) (snd p, fst p + snd p);
  in
  go n (0, 1)
in
fib 12
