let
  fun fib (n : int) : int =
    case iszero n of {
      inl (y : unit) -> 0;
      inr (z : unit) -> case iszero (n - 1) of {
        inl (y : unit) -> 1;
        inr (w : unit) -> fib (n - 1) + fib (n - 2)
      }
    };
in
-- fib 5 works, fib 6 segfaults. GC issues.
-- Specifically, stack overflow when tracing cyclic closure. I.E., the closure
-- for a recursive function.
--
-- To fix this, I need to do tricolor mark-sweep, ref. Crafting Interpreters
fib 6
